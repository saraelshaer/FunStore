@model IEnumerable<Product>
@{
    ViewData["Title"] = "Product List";
}@foreach (var product in Model)
{
    <div class="col-sm-3">
        <div class="thumb-wrapper">
            <span class="wish-icon"><i class="fa fa-heart-o"></i></span>
            <div class="img-box">
                <img src="~/productImages/@product.ImageFileName" class="img-thumbnail" alt="@product.Name"> @* class="img-fluid" *@
            </div>
            <div class="thumb-content">
                <h4>@product.Name</h4>
                <div class="star-rating">
                    <ul class="list-inline">
                        <li class="list-inline-item"><i class="fa fa-star"></i></li>
                        <li class="list-inline-item"><i class="fa fa-star"></i></li>
                        <li class="list-inline-item"><i class="fa fa-star"></i></li>
                        <li class="list-inline-item"><i class="fa fa-star"></i></li>
                        <li class="list-inline-item"><i class="fa fa-star-o"></i></li>
                    </ul>
                </div>
                <p class="item-price"><b>@product.Price</b></p>
                <a href="#" class="btn btn-primary">Add to Cart</a>
            </div>
        </div>
    </div>

    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
        <div class="text-center">
            <!-- Add to Cart Button -->
            <a class="btn btn-outline-dark mt-auto add-to-cart" data-product-id="@product.Id" data-quantity="1">Add to Cart</a>
        </div>
    </div>
    /////////
@*     public IActionResult UserIndex()
    {
        var products = _unitOfWork.ProductRepository.GetAll(p => p.IsActive, new[] { "Category" });
        return View(products);
    } *@
}




